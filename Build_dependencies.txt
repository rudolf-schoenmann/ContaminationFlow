# MolfowLinux was compiled on CentOS7 with gcc 4.8 and openmpi 1.10.x
# These dependencies are not available for newer systems. This file contains instructions on how to install them.
# The instructions were tested on Fedora 32

#-----------------------------------Prerequistes
# Install isl-devel, e.g.
# If build fails because isl is not found. Not sure if this is needed anymore. 
dnf install isl-devel
dnf install binutils-devel


#-----------------------------------Build gcc 8.2.0
# Download archive file and extract
cd ~/Downloads
wget http://mirrors.concertpass.com/gcc/releases/gcc-8.2.0/gcc-8.2.0.tar.gz
tar xvf gcc-8.2.0.tar.gz
cd gcc-8.2.0
./contrib/download_prerequisites
# ---- Debugging
# If connection error change ftp to https in ./contrib/download_prerequisites and repeat
# If package is corrupted, delete *.tar.bz archive and repeat

# Create build and install directory
mkdir ~/gcc8
cd ~/gcc8
mkdir build
cd build
# Configure: --prefix=local directory 
~/Downloads/gcc-8.2.0/configure --prefix=$HOME/gcc8 --enable-languages=c,c++ --disable-multilib

# Change files (in extracted archive) for build according to
# https://gcc.gnu.org/legacy-ml/gcc-patches/2019-11/msg02387.html
# lines are not completely correct: libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h: 213 || libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc (instead of cpp): 1150
# Build to build directory
make
# Install to install directory
make install

#-----------------------------------Build gcc 4.8.5 using gcc 8.2.0
# Download archive file and extract
cd ~/Downloads
wget http://mirrors.concertpass.com/gcc/releases/gcc-4.8.5/gcc-4.8.5.tar.gz
tar xvf gcc-4.8.5.tar.gz
cd gcc-4.8.5
./contrib/download_prerequisites
# ---- Debugging
# If connection error change ftp to https in ./contrib/download_prerequisites and repeat
# If package is corrupted, delete *.tar.bz archive and repeat

# Create build and install directory
mkdir ~/gcc4
cd ~/gcc4
mkdir build
cd build
# Configure: --prefix=local directory 
~/Downloads/gcc-4.8.5/configure --prefix=$HOME/gcc4 --enable-languages=c,c++ --disable-multilib

# set environment variables to find gcc8
setenv PATH $HOME/gcc8/bin\:$PATH
setenv LD_LIBRARY_PATH $HOME/gcc8/lib\:$HOME/gcc8/lib64\:$LD_LIBRARY_PATH
# Remove > \:$LD_LIBRARY_PATH < if LD_LIBRARY_PATH is undefined

# Change files (in extracted archive) for build according to
# https://develop.openfoam.com/Development/ThirdParty-common/-/blob/7aee88cf92d57da3fa0cc171250b4486deaa7a19/etc/patches/gcc-4.8.5-with-gcc-7
# Build to build directory
make
# Install to install directory
make install


#-----------------------------------Build openmpi 1.10.7 using gcc 4.8.5
# Download openmpi 1.10.7 from https://www.open-mpi.org/software/ompi/v1.10/
# The following instructions were taken from https://zkwang.gitee.io/linux/mpi/2016/06/05/install-openmpi.html

tar xvzf openmpi-1.10.7.tar.gz

# Create build and install directory
mkdir ~/mpi
cd ~/mpi
mkdir build
cd build
# Configure: --prefix=local directory 
~/Downloads/openmpi-1.10.7/configure --prefix=$HOME/mpi --enable-static

# set environment variables to find gcc4
setenv PATH $HOME/gcc4/bin\:$PATH
setenv LD_LIBRARY_PATH $HOME/gcc4/lib\:$HOME/gcc4/lib64\:$LD_LIBRARY_PATH
# Remove > \:$LD_LIBRARY_PATH < if LD_LIBRARY_PATH is undefined

# Build to build directory
make
# Install to install directory
make install

#-----------------------------------Use openmpi 1.10.7 and gcc 4.8.5
# set environment variables to find openmpi and gcc4 and gsl
source ~/MolflowLinux/Molflow.tcsh
# Equivalent to:
# setenv PATH $HOME/mpi/bin\:$HOME/gcc4/bin\:$PATH
# setenv LD_LIBRARY_PATH $HOME/MolflowLinux/include/lib\:$HOME/mpi/lib\:$HOME/gcc4/lib\:$HOME/gcc4/lib64\:$LD_LIBRARY_PATH
# Remove > \:$LD_LIBRARY_PATH < if LD_LIBRARY_PATH is undefined

# Use eclipse
cd /path-to-eclipse/
./eclipse

# Run executable
mpirun -N 2 ~/MolflowLinux/Debug/MolflowLinux ~/InputFileCF.txt 0

#-----------------------------------Build gsl 2.6
# see https://coral.ise.lehigh.edu/jild13/2016/07/11/hello/
wget https://ftp.gnu.org/gnu/gsl/gsl-2.6.tar.gz
tar xvzf gsl-2.6.tar.gz

cd ~/MolflowLinux
mkdir include
cd include
mkdir build
cd build
~/Downloads/gsl-2.6/configure --prefix=$HOME/MolflowLinux/include

make
make check
make install

# changes to project properties
# C/C++ Build -> Settings -> GCC C++ Compiler -> Includes: replace gsl path "${workspace_loc:/MolflowLinux/include/include/}"
# C/C++ Build -> Settings -> GCC C++ Linker -> Libraries: add library below gsl: gslcblas
# C/C++ Build -> Settings -> GCC C++ Linker -> Libraries: replace gsl library search path:"${workspace_loc:/MolflowLinux/include/lib}"

#----------------------------------- Appendix: Changes to source files gcc 8.2.0

--- libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cpp	(revision 278721)
+++ libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cpp	(working copy)
@@ -1128,11 +1128,9 @@ CHECK_SIZE_AND_OFFSET(ipc_perm, uid);
 CHECK_SIZE_AND_OFFSET(ipc_perm, gid);
 CHECK_SIZE_AND_OFFSET(ipc_perm, cuid);
 CHECK_SIZE_AND_OFFSET(ipc_perm, cgid);
-#if (!defined(__aarch64__) || !SANITIZER_LINUX || __GLIBC_PREREQ (2, 21)) && \
-    !defined(__arm__)
-/* On aarch64 glibc 2.20 and earlier provided incorrect mode field.  */
-/* On Arm newer glibc provide a different mode field, it's hard to detect
-   so just disable the check.  */
+#if !SANITIZER_LINUX || __GLIBC_PREREQ (2, 31)
+/* glibc 2.30 and earlier provided 16-bit mode field instead of 32-bit
+   on many architectures.  */
 CHECK_SIZE_AND_OFFSET(ipc_perm, mode);
 #endif
 
--- libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h	(revision 278721)
+++ libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h	(working copy)
@@ -207,26 +207,13 @@ struct __sanitizer_ipc_perm {
   u64 __unused1;
   u64 __unused2;
 #elif defined(__sparc__)
-#if defined(__arch64__)
   unsigned mode;
-  unsigned short __pad1;
-#else
-  unsigned short __pad1;
-  unsigned short mode;
   unsigned short __pad2;
-#endif
   unsigned short __seq;
   unsigned long long __unused1;
   unsigned long long __unused2;
-#elif defined(__mips__) || defined(__aarch64__) || defined(__s390x__)
-  unsigned int mode;
-  unsigned short __seq;
-  unsigned short __pad1;
-  unsigned long __unused1;
-  unsigned long __unused2;
 #else
-  unsigned short mode;
-  unsigned short __pad1;
+  unsigned int mode;
   unsigned short __seq;
   unsigned short __pad2;
 #if defined(__x86_64__) && !defined(_LP64)
 
#----------------------------------- Appendix: Changes to source files gcc 4.8.5

--- gcc-4.8.5/gcc/cp/cfns.gperf.orig	2013-01-10 21:38:27.000000000 +0100
+++ gcc-4.8.5/gcc/cp/cfns.gperf	2016-02-25 16:36:41.000000000 +0100
@@ -1,5 +1,7 @@
+%language=C++
+%define class-name libc_name
 %{
-/* Copyright (C) 2000-2013 Free Software Foundation, Inc.
+/* Copyright (C) 2000-2014 Free Software Foundation, Inc.
 
 This file is part of GCC.
 
@@ -16,14 +18,6 @@
 You should have received a copy of the GNU General Public License
 along with GCC; see the file COPYING3.  If not see
 <http://www.gnu.org/licenses/>.  */
-#ifdef __GNUC__
-__inline
-#endif
-static unsigned int hash (const char *, unsigned int);
-#ifdef __GNUC__
-__inline
-#endif
-const char * libc_name_p (const char *, unsigned int);
 %}
 %%
 # The standard C library functions, for feeding to gperf; the result is used
--- gcc-4.8.5/gcc/cp/cfns.h.orig	2013-01-10 21:38:27.000000000 +0100
+++ gcc-4.8.5/gcc/cp/cfns.h	2016-02-25 16:36:41.000000000 +0100
@@ -1,5 +1,5 @@
-/* ANSI-C code produced by gperf version 3.0.3 */
-/* Command-line: gperf -o -C -E -k '1-6,$' -j1 -D -N libc_name_p -L ANSI-C cfns.gperf  */
+/* C++ code produced by gperf version 3.0.4 */
+/* Command-line: gperf -o -C -E -k '1-6,$' -j1 -D -N libc_name_p -L C++ --output-file cfns.h cfns.gperf  */
 
 #if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
       && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
@@ -28,9 +28,9 @@
 #error "gperf generated tables don't work with this execution character set. Please report a bug to <bug-gnu-gperf@gnu.org>."
 #endif
 
-#line 1 "cfns.gperf"
+#line 3 "cfns.gperf"
 
-/* Copyright (C) 2000-2013 Free Software Foundation, Inc.
+/* Copyright (C) 2000-2014 Free Software Foundation, Inc.
 
 This file is part of GCC.
 
@@ -47,25 +47,18 @@
 You should have received a copy of the GNU General Public License
 along with GCC; see the file COPYING3.  If not see
 <http://www.gnu.org/licenses/>.  */
-#ifdef __GNUC__
-__inline
-#endif
-static unsigned int hash (const char *, unsigned int);
-#ifdef __GNUC__
-__inline
-#endif
-const char * libc_name_p (const char *, unsigned int);
 /* maximum key range = 391, duplicates = 0 */
 
-#ifdef __GNUC__
-__inline
-#else
-#ifdef __cplusplus
-inline
-#endif
-#endif
-static unsigned int
-hash (register const char *str, register unsigned int len)
+class libc_name
+{
+private:
+  static inline unsigned int hash (const char *str, unsigned int len);
+public:
+  static const char *libc_name_p (const char *str, unsigned int len);
+};
+
+inline unsigned int
+libc_name::hash (register const char *str, register unsigned int len)
 {
   static const unsigned short asso_values[] =
     {
@@ -122,14 +115,8 @@
   return hval + asso_values[(unsigned char)str[len - 1]];
 }
 
-#ifdef __GNUC__
-__inline
-#ifdef __GNUC_STDC_INLINE__
-__attribute__ ((__gnu_inline__))
-#endif
-#endif
 const char *
-libc_name_p (register const char *str, register unsigned int len)
+libc_name::libc_name_p (register const char *str, register unsigned int len)
 {
   enum
     {
--- gcc-4.8.5/gcc/cp/except.c.orig	2013-10-25 15:49:48.000000000 +0200
+++ gcc-4.8.5/gcc/cp/except.c	2018-07-27 13:11:11.825369497 +0200
@@ -1025,7 +1025,7 @@
      unless the system headers are playing rename tricks, and if
      they are, we don't want to be confused by them.  */
   id = DECL_NAME (fn);
-  return !!libc_name_p (IDENTIFIER_POINTER (id), IDENTIFIER_LENGTH (id));
+  return !!libc_name::libc_name_p (IDENTIFIER_POINTER (id), IDENTIFIER_LENGTH (id));
 }
 
 /* Returns nonzero if an exception of type FROM will be caught by a
--- gcc-4.8.5/libgcc/config/i386/linux-unwind.h.orig	2013-02-04 20:06:20.000000000 +0100
+++ gcc-4.8.5/libgcc/config/i386/linux-unwind.h	2018-07-27 12:51:18.305390871 +0200
@@ -58,7 +58,7 @@
   if (*(unsigned char *)(pc+0) == 0x48
       && *(unsigned long long *)(pc+1) == RT_SIGRETURN_SYSCALL)
     {
-      struct ucontext *uc_ = context->cfa;
+      ucontext_t *uc_ = context->cfa;
       /* The void * cast is necessary to avoid an aliasing warning.
          The aliasing warning is correct, but should not be a problem
          because it does not alias anything.  */
@@ -138,7 +138,7 @@
 	siginfo_t *pinfo;
 	void *puc;
 	siginfo_t info;
-	struct ucontext uc;
+	ucontext_t uc;
       } *rt_ = context->cfa;
       /* The void * cast is necessary to avoid an aliasing warning.
          The aliasing warning is correct, but should not be a problem
--- gcc-4.8.5/libsanitizer/asan/asan_linux.cc.orig	2013-01-23 12:41:33.000000000 +0100
+++ gcc-4.8.5/libsanitizer/asan/asan_linux.cc	2018-07-27 12:51:45.641390381 +0200
@@ -25,6 +25,7 @@
 #include <sys/types.h>
 #include <fcntl.h>
 #include <pthread.h>
+#include <signal.h>
 #include <stdio.h>
 #include <unistd.h>
 #include <unwind.h>
--- gcc-4.8.5/libsanitizer/tsan/tsan_platform_linux.cc.orig	2013-02-21 11:57:10.000000000 +0100
+++ gcc-4.8.5/libsanitizer/tsan/tsan_platform_linux.cc	2018-07-27 13:17:32.417362682 +0200
@@ -292,7 +292,7 @@
 #ifndef TSAN_GO
 int ExtractResolvFDs(void *state, int *fds, int nfd) {
   int cnt = 0;
-  __res_state *statp = (__res_state*)state;
+  struct __res_state *statp = (struct __res_state*)state;
   for (int i = 0; i < MAXNS && cnt < nfd; i++) {
     if (statp->_u._ext.nsaddrs[i] && statp->_u._ext.nssocks[i] != -1)
       fds[cnt++] = statp->_u._ext.nssocks[i];
